In the GitHub you can find the code "ArduinoIDE_RecordingData". You will need to copy and paste this code into an Arduino IDE on your device. Next, edit lines 35 and 36 with the name (in line 35) and the password (in line 36) of the WiFi the ESP and the Pi will be connected to.

Now, before the code can be uploaded, you will need to go here: https://randomnerdtutorials.com/how-to-install-esp8266-board-arduino-ide/. Follow the instructions to install the ESP8266 board manager. 

Next, go to Tools (at the top) -> Board -> NodeMCU 0.9 (ESP-12 Module). The port also needs to be changed. To do this, plug the ESP into your device, search within your device for "Device Manager" and expand the Ports (COM & LPT) dropdown. From there, it should list the ESP device and what COM it is on. Now you can go back to the Arduino IDE -> Tools -> Port and select the appropriate COM.

In addition, select the third icon down on the left of the IDE. This should open up the libraries. Make sure you have Adafruit BUSIO, ArduinoJson, and RTClib installed.

With the ESP still plugged into your device, look for the right arrow at the top of your IDE and select it to upload the code to the ESP.

After the code is uploaded, go to Tools -> Serial Monitor. It should print out the IP address of the ESP. Save this number.

Now, connect the Raspberry Pi to power and open up the Pi via PiConnect. If you aren't sure how to do this, I have included steps below.

First, connect the Pi to a mouse, keyboard, and monitor.

Once done, make an account with PiConnect from here: https://connect.raspberrypi.com/devices.

Then instructions to link the Pi to your PiConnect account can be found here: https://www.raspberrypi.com/documentation/services/connect.html#link-connect. Read from "Link a Raspberry Pi device with a Connect account".

Now, connect the Pi to the battery pack and connect to the Pi on your device via PiConnect.

In the upper right corner you can select the WiFi icon to connect the Pi to the same WiFi as the ESP. Afterwards, select the file icon in the upper left corner and find the "esptopi.py" file. Right click and open it with IDLE. From here, edit line 13 in the code to match the ESP IP address recorded from the Arduino IDE.

Save it and select run at the top of the IDE to upload it to the Pi.
